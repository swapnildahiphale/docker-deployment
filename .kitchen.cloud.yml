#<% require 'kitchen-sync' %>
---
driver_config:
   digitalocean_access_token: <%= ENV['DIGITALOCEAN_API_TOKEN'] %>
   aws_access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
   aws_secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
   aws_ssh_key_id: <%= ENV['AWS_KEYPAIR_NAME'] %>
   flavor_id: <%= ENV['EC2_FLAVOR_ID'] %>
   availability_zone: <%= ENV['AWS_AVAILABILITY_ZONE'] %>

provisioner:
  name: chef_zero
  require_chef_omnibus: true

verifier:
  name: inspec

platforms:
- name: centos-6.5
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: centos-6-5-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[yum-docker]

- name: centos-7.0
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: centos-7-0-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[yum-docker]

# - name: amazon-2014.09
#   driver_plugin: ec2
#   driver_config:
#     image_id: ami-9a6ed3f2
#     username: ec2-user
#   transport:
#     ssh_key: <%= ENV['EC2_SSH_KEY_PATH'] %>
#  run_list:
#  - recipe[yum-docker]

- name: fedora-21
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: fedora-21-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[yum-docker]

# - name: debian-8.1
#   driver_plugin: digitalocean
#   driver_config:
#     use_sudo: false
#     size: 2gb
#     image: debian-8-x64
#     region: <%= ENV['DIGITALOCEAN_REGION'] %>
#     ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
#     ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
#   run_list:
#   - recipe[apt]
#   - recipe[apt-docker]

- name: ubuntu-12.04
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: ubuntu-12-04-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[apt]
  - recipe[apt-docker]

- name: ubuntu-14.04
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: ubuntu-14-04-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[apt]
  - recipe[apt-docker]

- name: ubuntu-15.10
  driver_plugin: digitalocean
  driver_config:
    size: 2gb
    image: ubuntu-15-10-x64
    region: <%= ENV['DIGITALOCEAN_REGION'] %>
    ssh_key_ids: <%= ENV['DIGITALOCEAN_SSH_KEYS'] %>
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  transport:
    ssh_key: <%= ENV['DIGITALOCEAN_SSH_KEY_PATH'] %>
  run_list:
  - recipe[apt]
  - recipe[apt-docker]

suites:
#####################################
# docker_installation_binary resource
#####################################

- name: installation_binary-1100
  includes: [
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.10.0'
  run_list:
  - recipe[docker_test::installation_binary]

#####################################
# docker_installation_script resource
#####################################

- name: installation_script_main
  includes: [
    'ubuntu-15.10',
  ]
  attributes:
    docker:
      repo: 'main'
  run_list:
  - recipe[docker_test::installation_script]

- name: installation_script_test
  includes: [
    'ubuntu-15.10',
  ]
  attributes:
    docker:
      repo: 'test'
  run_list:
  - recipe[docker_test::installation_script]

- name: installation_script_experimental
  includes: [
    'ubuntu-15.10',
  ]
  attributes:
    docker:
      repo: 'experimental'
  run_list:
  - recipe[docker_test::installation_script]

######################################
# docker_installation_package resource
######################################

- name: installation_package-191
  includes: [
    'centos-7.0',
    'debian-8.1',
    'fedora-21',
    'ubuntu-12.04',
    'ubuntu-14.04',
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.9.1'
  run_list:
  - recipe[docker_test::installation_package]

- name: installation_package-1100
  includes: [
    'centos-7.0',
    'debian-8.1',
    'ubuntu-12.04',
    'ubuntu-14.04',
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.10.0'
  run_list:
  - recipe[docker_test::installation_package]

#################################
# docker_service_execute resource
#################################
- name: service-execute
  includes: [
    'ubuntu-15.10',
  ]
  run_list:
  - recipe[docker_test::service_execute]

- name: service-execute-multi
  includes: [
    'ubuntu-15.10',
  ]
  run_list:
  - recipe[docker_test::service_execute_multi]

##################################
# docker_service_sysvinit resource
##################################
- name: service-sysvinit
  includes: [
    'centos-6.5'
  ]
  run_list:
  - recipe[docker_test::service_sysvinit]

- name: service-sysvinit-multi
  includes: [
    'centos-6.5'
  ]
  run_list:
  - recipe[docker_test::service_sysvinit_multi]

#################################
# docker_service_upstart resource
#################################
- name: service-upstart
  includes: [
    'ubuntu-12.04',
    'ubuntu-14.04'
  ]
  run_list:
  - recipe[docker_test::service_upstart]

- name: service-upstart-multi
  includes: [
    'ubuntu-12.04',
    'ubuntu-14.04'
  ]
  run_list:
  - recipe[docker_test::service_upstart_multi]

#################################
# docker_service_systemd resource
#################################
- name: service-systemd
  includes: [
    'centos-7.0',
    'fedora-21',
    'debian-8.1',
    'ubuntu-15.10'
  ]
  run_list:
  - recipe[docker_test::service_systemd]

- name: service-systemd-multi
  includes: [
    'centos-7.0',
    'fedora-21',
    'debian-8.1',
    'ubuntu-15.10'
  ]
  run_list:
  - recipe[docker_test::service_systemd_multi]

#######################
# bulk resource testing
#######################

- name: resources-191
  includes: [
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.9.1'
  run_list:
  - recipe[docker_test::default]
  - recipe[docker_test::image]
  - recipe[docker_test::container]

- name: resources-1100
  includes: [
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.10.0'
  run_list:
  - recipe[docker_test::default]
  - recipe[docker_test::image]
  - recipe[docker_test::container]

- name: network
  includes: [
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.10.0'
  run_list:
  - recipe[docker_test::default]
  - recipe[docker_test::network]

- name: volume
  includes: [
    'ubuntu-15.10'
  ]
  attributes:
    docker:
      version: '1.10.0'
  run_list:
  - recipe[docker_test::default]
  - recipe[docker_test::volume]

#####################
# docker_service auto
#####################

- name: auto
  includes: [
    'centos-7.0',
    'fedora-21',
    'debian-8.1',
    'ubuntu-12.04',
    'ubuntu-14.04',
    'ubuntu-15.10'
  ]
  run_list:
  - recipe[docker_test::auto]
